// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TasksReducer LOAD should add a single Task, if the Task does not exist 1`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
  ],
  "selectedTaskId": null,
}
`;

exports[`TasksReducer LOAD should return the existing state if the Task exists 1`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
  ],
  "selectedTaskId": null,
}
`;

exports[`TasksReducer SEARCH_COMPLETE & LOAD_SUCCESS should add all Tasks in the payload when none exist 1`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "222": Object {
      "id": "222",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
    "222",
  ],
  "selectedTaskId": null,
}
`;

exports[`TasksReducer SEARCH_COMPLETE & LOAD_SUCCESS should add all Tasks in the payload when none exist 2`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "222": Object {
      "id": "222",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
    "222",
  ],
  "selectedTaskId": null,
}
`;

exports[`TasksReducer SEARCH_COMPLETE & LOAD_SUCCESS should add only new Tasks when Tasks already exist 1`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "222": Object {
      "id": "222",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "333": Object {
      "id": "333",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
    "222",
    "333",
  ],
  "selectedTaskId": null,
}
`;

exports[`TasksReducer SEARCH_COMPLETE & LOAD_SUCCESS should add only new Tasks when Tasks already exist 2`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "222": Object {
      "id": "222",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "333": Object {
      "id": "333",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
    "222",
    "333",
  ],
  "selectedTaskId": null,
}
`;

exports[`TasksReducer SELECT should set the selected Task id on the state 1`] = `
Object {
  "entities": Object {
    "1": Object {
      "id": "1",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
    "222": Object {
      "id": "222",
      "volumeInfo": Object {
        "authors": Array [
          "author",
        ],
        "averageRating": 3,
        "description": "description",
        "imageLinks": Object {
          "smallThumbnail": "string",
          "thumbnail": "string",
        },
        "publishDate": "",
        "publisher": "publisher",
        "ratingsCount": 5,
        "subtitle": "subtitle",
        "title": "title",
      },
    },
  },
  "ids": Array [
    "1",
    "222",
  ],
  "selectedTaskId": "1",
}
`;

exports[`TasksReducer Selectors getSelectedId should return the selected id 1`] = `"1"`;

exports[`TasksReducer undefined action should return the default state 1`] = `
Object {
  "entities": Object {},
  "ids": Array [],
  "selectedTaskId": null,
}
`;
